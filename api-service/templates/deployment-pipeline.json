{
  "Parameters": {
    "GitHubRepo": {
      "Type": "String"
    },
    "GitHubBranch": {
      "Type": "String"
    },
    "GitHubToken": {
      "Type": "String"
    },
    "GitHubUser": {
      "Type": "String"
    },
    "TemplateBucket": {
      "Type": "String"
    },
    "Tag": {
      "Type": "String",
      "Default": "latest"
    },
    "Name": {
      "Type": "String"
    },
    "ContainerName": {
      "Type": "String"
    },
    "ContainerPort": {
      "Type": "Number",
      "Default": 3000
    },
    "Port": {
      "Type": "Number",
      "Default": 3000
    },
    "DesiredCount": {
      "Type": "Number",
      "Default": 0
    },
    "LoadBalancerName": {
      "Type": "String"
    },
    "Cluster": {
      "Type": "String"
    },
    "RdsDbName": {
      "Type": "String"
    },
    "RdsHostname": {
      "Type": "String"
    },
    "RdsUsername": {
      "Type": "String"
    },
    "RdsPassword": {
      "Type": "String"
    },
    "AwslogsGroup": {
      "Type": "String"
    },
    "AwslogsRegion": {
      "Type": "String"
    },
    "AwslogsStreamPrefix": {
      "Type": "String"
    }
  },
  "Resources": {
    "Repository": {
      "Type": "AWS::ECR::Repository",
      "DeletionPolicy": "Retain"
    },
    "CloudFormationExecutionRole": {
      "Type": "AWS::IAM::Role",
      "DeletionPolicy": "Retain",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": "{\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Principal\": { \"Service\": [ \"cloudformation.amazonaws.com\" ]},\n        \"Action\": [ \"sts:AssumeRole\" ]\n    }]\n}\n",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Resource": "*",
                  "Effect": "Allow",
                  "Action": [
                    "ecs:*",
                    "ecr:*",
                    "iam:*"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CodeBuildServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": "{\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Principal\": { \"Service\": [ \"codebuild.amazonaws.com\" ]},\n        \"Action\": [ \"sts:AssumeRole\" ]\n    }]\n}\n",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Resource": "*",
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "ecr:GetAuthorizationToken"
                  ]
                },
                {
                  "Resource": "arn:aws:s3:::${ArtifactBucket}/*",
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ]
                },
                {
                  "Resource": "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${Repository}",
                  "Effect": "Allow",
                  "Action": [
                    "ecr:GetDownloadUrlForLayer",
                    "ecr:BatchGetImage",
                    "ecr:BatchCheckLayerAvailability",
                    "ecr:PutImage",
                    "ecr:InitiateLayerUpload",
                    "ecr:UploadLayerPart",
                    "ecr:CompleteLayerUpload"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CodePipelineServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": "{\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Principal\": { \"Service\": [ \"codepipeline.amazonaws.com\" ]},\n        \"Action\": [ \"sts:AssumeRole\" ]\n    }]\n}\n",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Resource": [
                    "arn:aws:s3:::${ArtifactBucket}/*",
                    "arn:aws:s3:::${TemplateBucket}",
                    "arn:aws:s3:::${TemplateBucket}/*"
                  ],
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject",
                    "s3:GetObjectVersion",
                    "s3:GetBucketVersioning"
                  ]
                },
                {
                  "Resource": "*",
                  "Effect": "Allow",
                  "Action": [
                    "codebuild:StartBuild",
                    "codebuild:BatchGetBuilds",
                    "cloudformation:*",
                    "iam:PassRole"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "ArtifactBucket": {
      "Type": "AWS::S3::Bucket",
      "DeletionPolicy": "Retain"
    },
    "CodeBuildProject": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Location": "ArtifactBucket",
          "Type": "S3"
        },
        "Source": {
          "Location": "${ArtifactBucket}/source.zip",
          "Type": "S3",
          "BuildSpec": "version: 0.2\nphases:\n  pre_build:\n    commands:\n      - $(aws ecr get-login)\n      - TAG=\"$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)\"\n  build:\n    commands:\n      - docker build --tag \"${REPOSITORY_URI}:${TAG}\" .\n  post_build:\n    commands:\n      - docker push \"${REPOSITORY_URI}:${TAG}\"\n      - printf '{\"tag\":\"%s\"}' $TAG > build.json\nartifacts:\n  files: build.json\n"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/docker:1.12.1",
          "Type": "LINUX_CONTAINER",
          "EnvironmentVariables": [
            {
              "Name": "AWS_DEFAULT_REGION",
              "Value": "AWS::Region"
            },
            {
              "Name": "REPOSITORY_URI",
              "Value": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}"
            }
          ]
        },
        "Name": "AWS::StackName",
        "ServiceRole": "CodeBuildServiceRole"
      }
    },
    "Pipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": "CodePipelineServiceRole.Arn",
        "ArtifactStore": {
          "Type": "S3",
          "Location": "ArtifactBucket"
        },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "Name": "App",
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Version": 1,
                  "Provider": "GitHub"
                },
                "Configuration": {
                  "Owner": "GitHubUser",
                  "Repo": "GitHubRepo",
                  "Branch": "GitHubBranch",
                  "OAuthToken": "GitHubToken"
                },
                "OutputArtifacts": [
                  {
                    "Name": "App"
                  }
                ],
                "RunOrder": 1
              },
              {
                "Name": "Template",
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Version": 1,
                  "Provider": "S3"
                },
                "OutputArtifacts": [
                  {
                    "Name": "Template"
                  }
                ],
                "RunOrder": 1,
                "Configuration": {
                  "S3Bucket": "TemplateBucket",
                  "S3ObjectKey": "templates.zip"
                }
              }
            ]
          },
          {
            "Name": "Build",
            "Actions": [
              {
                "Name": "Build",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": 1,
                  "Provider": "CodeBuild"
                },
                "Configuration": {
                  "ProjectName": "CodeBuildProject"
                },
                "InputArtifacts": [
                  {
                    "Name": "App"
                  }
                ],
                "OutputArtifacts": [
                  {
                    "Name": "BuildOutput"
                  }
                ],
                "RunOrder": 1
              }
            ]
          },
          {
            "Name": "Deploy",
            "Actions": [
              {
                "Name": "Deploy",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": 1,
                  "Provider": "CloudFormation"
                },
                "Configuration": {
                  "ChangeSetName": "Deploy",
                  "ActionMode": "CREATE_UPDATE",
                  "StackName": "AWS::StackName",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "TemplatePath": "Template::ecs-service.json",
                  "RoleArn": "CloudFormationExecutionRole.Arn",
                  "ParameterOverrides": "{\n  \"Tag\" : { \"Fn::GetParam\" : [ \"BuildOutput\", \"build.json\", \"tag\" ] },\n  \"Name\": \"${Name}\",\n  \"ContainerName\": \"${ContainerName}\",\n  \"ContainerPort\": \"${ContainerPort}\",\n  \"Port\": \"${Port}\",\n  \"DesiredCount\": \"${DesiredCount}\",\n  \"RdsDbName\": \"${RdsDbName}\",\n  \"RdsHostname\": \"${RdsHostname}\",\n  \"RdsUsername\": \"${RdsUsername}\",\n  \"RdsPassword\": \"${RdsPassword}\",\n  \"AwslogsGroup\": \"${AwslogsGroup}\",\n  \"AwslogsRegion\": \"${AwslogsRegion}\",\n  \"AwslogsStreamPrefix\": \"${AwslogsStreamPrefix}\",\n  \"Cluster\": \"${Cluster}\",\n  \"LoadBalancerName\": \"${LoadBalancerName}\",\n  \"Repository\": \"${Repository}\"\n}\n"
                },
                "InputArtifacts": [
                  {
                    "Name": "Template"
                  },
                  {
                    "Name": "BuildOutput"
                  }
                ],
                "RunOrder": 1
              }
            ]
          }
        ]
      }
    }
  },
  "Outputs": {
    "PipelineUrl": {
      "Value": "https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}"
    }
  }
}