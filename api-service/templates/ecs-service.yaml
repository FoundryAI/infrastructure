Parameters:
  Tag:
    Type: String
    Default: latest

  Name:
    Type: String

  ContainerName:
    Type: String

  ContainerPort:
    Type: Number
    Default: 3000

  Port:
    Type: Number
    Default: 3000

  DesiredCount:
    Type: Number
    Default: 0

  LoadBalancerName:
    Type: String

  Cluster:
    Type: String

  Repository:
    Type: String

  RdsDbName:
    Type: String

  RdsHostname:
    Type: String

  RdsUsername:
    Type: String

  RdsPassword:
    Type: String

  AwslogsGroup:
    Type: String

  AwslogsRegion:
    Type: String

  AwslogsStreamPrefix:
    Type: String

  DynamoDbEndpoint:
    Type: String

  SnsEndpoint:
    Type: String

  AwsRegion:
    Type: String

  AwsAccessKey:
    Type: String

  AwsSecretKey:
    Type: String

  Environment:
    Type: String

Resources:
  ECSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "ecs.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole

  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref Name
      Cluster: !Ref Cluster
      Role: !Ref ECSServiceRole
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: !Ref ContainerName
          ContainerPort: !Ref ContainerPort
          LoadBalancerName: !Ref LoadBalancerName

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref Name
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}:${Tag}
          Essential: true
          Memory: 512
          PortMappings:
            - ContainerPort: !Ref ContainerPort
              HostPort: !Ref Port
          LogConfiguration:
            LogDriver: awslogs
            Options:
            Options:
                awslogs-group: !Ref AwslogsGroup
                awslogs-region: !Ref AwslogsRegion
                awslogs-stream-prefix: !Ref AwslogsStreamPrefix
          Environment:
            - Name: Tag
              Value: !Ref Tag
            - Name: RDS_DB_NAME
              Value: !Ref RdsDbName
            - Name: RDS_HOSTNAME
              Value: !Ref RdsHostname
            - Name: RDS_USERNAME
              Value: !Ref RdsUsername
            - Name: RDS_PASSWORD
              Value: !Ref RdsPassword
            - Name: DYNAMODB_ENDPOINT
              Value: !Ref DynamoDbEndpoint
            - Name: SNS_ENDPOINT
              Value: !Ref SnsEndpoint
            - Name: AWS_ACCOUNT_ID
              Value: !Ref AWS::AccountId
            - Name: AWS_REGION
              Value: !Ref AwsRegion
            - Name: AWS_ACCESS_KEY
              Value: !Ref AwsAccessKey
            - Name: AWS_SECRET_KEY
              Value: !Ref AwsSecretKey
            - Name: ENVIRONMENT
              Value: !Ref Environment
